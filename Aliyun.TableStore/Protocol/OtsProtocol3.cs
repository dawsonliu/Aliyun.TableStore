// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ots_protocol.3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Wicture.Aliyun.TableStore.Protocol {

  /// <summary>Holder for reflection information generated from ots_protocol.3.proto</summary>
  public static partial class OtsProtocol3Reflection {

    #region Descriptor
    /// <summary>File descriptor for ots_protocol.3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OtsProtocol3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRvdHNfcHJvdG9jb2wuMy5wcm90bxIiV2ljdHVyZS5BbGl5dW4uVGFibGVT",
            "dG9yZS5Qcm90b2NvbCImCgVFcnJvchIMCgRjb2RlGAEgASgJEg8KB21lc3Nh",
            "Z2UYAiABKAkiWgoMQ29sdW1uU2NoZW1hEgwKBG5hbWUYASABKAkSPAoEdHlw",
            "ZRgCIAEoDjIuLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wu",
            "Q29sdW1uVHlwZSKgAQoLQ29sdW1uVmFsdWUSPAoEdHlwZRgBIAEoDjIuLldp",
            "Y3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uVHlwZRIN",
            "CgV2X2ludBgCIAEoAxIQCgh2X3N0cmluZxgDIAEoCRIOCgZ2X2Jvb2wYBCAB",
            "KAgSEAoIdl9kb3VibGUYBSABKAESEAoIdl9iaW5hcnkYBiABKAwiVgoGQ29s",
            "dW1uEgwKBG5hbWUYASABKAkSPgoFdmFsdWUYAiABKAsyLy5XaWN0dXJlLkFs",
            "aXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNvbHVtblZhbHVlIpUBCgNSb3cS",
            "RwoTcHJpbWFyeV9rZXlfY29sdW1ucxgBIAMoCzIqLldpY3R1cmUuQWxpeXVu",
            "LlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uEkUKEWF0dHJpYnV0ZV9jb2x1",
            "bW5zGAIgAygLMiouV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2Nv",
            "bC5Db2x1bW4iZgoJVGFibGVNZXRhEhIKCnRhYmxlX25hbWUYASABKAkSRQoL",
            "cHJpbWFyeV9rZXkYAiADKAsyMC5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3Jl",
            "LlByb3RvY29sLkNvbHVtblNjaGVtYSLQAQoRUmVsYXRpb25Db25kaXRpb24S",
            "RgoKY29tcGFyYXRvchgBIAEoDjIyLldpY3R1cmUuQWxpeXVuLlRhYmxlU3Rv",
            "cmUuUHJvdG9jb2wuQ29tcGFyYXRvclR5cGUSEwoLY29sdW1uX25hbWUYAiAB",
            "KAkSRQoMY29sdW1uX3ZhbHVlGAMgASgLMi8uV2ljdHVyZS5BbGl5dW4uVGFi",
            "bGVTdG9yZS5Qcm90b2NvbC5Db2x1bW5WYWx1ZRIXCg9wYXNzX2lmX21pc3Np",
            "bmcYBCABKAgiqgEKEkNvbXBvc2l0ZUNvbmRpdGlvbhJHCgpjb21iaW5hdG9y",
            "GAEgASgOMjMuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5M",
            "b2dpY2FsT3BlcmF0b3ISSwoOc3ViX2NvbmRpdGlvbnMYAiADKAsyMy5XaWN0",
            "dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNvbHVtbkNvbmRpdGlv",
            "biJrCg9Db2x1bW5Db25kaXRpb24SRQoEdHlwZRgBIAEoDjI3LldpY3R1cmUu",
            "QWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uQ29uZGl0aW9uVHlw",
            "ZRIRCgljb25kaXRpb24YAiABKAwirgEKCUNvbmRpdGlvbhJSCg1yb3dfZXhp",
            "c3RlbmNlGAEgASgOMjsuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90",
            "b2NvbC5Sb3dFeGlzdGVuY2VFeHBlY3RhdGlvbhJNChBjb2x1bW5fY29uZGl0",
            "aW9uGAIgASgLMjMuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2Nv",
            "bC5Db2x1bW5Db25kaXRpb24iKwoMQ2FwYWNpdHlVbml0EgwKBHJlYWQYASAB",
            "KAUSDQoFd3JpdGUYAiABKAUivwEKGVJlc2VydmVkVGhyb3VnaHB1dERldGFp",
            "bHMSRwoNY2FwYWNpdHlfdW5pdBgBIAEoCzIwLldpY3R1cmUuQWxpeXVuLlRh",
            "YmxlU3RvcmUuUHJvdG9jb2wuQ2FwYWNpdHlVbml0EhoKEmxhc3RfaW5jcmVh",
            "c2VfdGltZRgCIAEoAxIaChJsYXN0X2RlY3JlYXNlX3RpbWUYAyABKAMSIQoZ",
            "bnVtYmVyX29mX2RlY3JlYXNlc190b2RheRgEIAEoBSJdChJSZXNlcnZlZFRo",
            "cm91Z2hwdXQSRwoNY2FwYWNpdHlfdW5pdBgBIAEoCzIwLldpY3R1cmUuQWxp",
            "eXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ2FwYWNpdHlVbml0IlsKEENvbnN1",
            "bWVkQ2FwYWNpdHkSRwoNY2FwYWNpdHlfdW5pdBgBIAEoCzIwLldpY3R1cmUu",
            "QWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ2FwYWNpdHlVbml0IqwBChJD",
            "cmVhdGVUYWJsZVJlcXVlc3QSQQoKdGFibGVfbWV0YRgBIAEoCzItLldpY3R1",
            "cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuVGFibGVNZXRhElMKE3Jl",
            "c2VydmVkX3Rocm91Z2hwdXQYAiABKAsyNi5XaWN0dXJlLkFsaXl1bi5UYWJs",
            "ZVN0b3JlLlByb3RvY29sLlJlc2VydmVkVGhyb3VnaHB1dCIVChNDcmVhdGVU",
            "YWJsZVJlc3BvbnNlIn0KElVwZGF0ZVRhYmxlUmVxdWVzdBISCgp0YWJsZV9u",
            "YW1lGAEgASgJElMKE3Jlc2VydmVkX3Rocm91Z2hwdXQYAiABKAsyNi5XaWN0",
            "dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLlJlc2VydmVkVGhyb3Vn",
            "aHB1dCJ5ChNVcGRhdGVUYWJsZVJlc3BvbnNlEmIKG3Jlc2VydmVkX3Rocm91",
            "Z2hwdXRfZGV0YWlscxgBIAEoCzI9LldpY3R1cmUuQWxpeXVuLlRhYmxlU3Rv",
            "cmUuUHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0RGV0YWlscyIqChREZXNj",
            "cmliZVRhYmxlUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgASgJIr4BChVEZXNj",
            "cmliZVRhYmxlUmVzcG9uc2USQQoKdGFibGVfbWV0YRgBIAEoCzItLldpY3R1",
            "cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuVGFibGVNZXRhEmIKG3Jl",
            "c2VydmVkX3Rocm91Z2hwdXRfZGV0YWlscxgCIAEoCzI9LldpY3R1cmUuQWxp",
            "eXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0RGV0",
            "YWlscyISChBMaXN0VGFibGVSZXF1ZXN0IigKEUxpc3RUYWJsZVJlc3BvbnNl",
            "EhMKC3RhYmxlX25hbWVzGAEgAygJIigKEkRlbGV0ZVRhYmxlUmVxdWVzdBIS",
            "Cgp0YWJsZV9uYW1lGAEgASgJIhUKE0RlbGV0ZVRhYmxlUmVzcG9uc2UiwQEK",
            "DUdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRI/CgtwcmltYXJ5",
            "X2tleRgCIAMoCzIqLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9j",
            "b2wuQ29sdW1uEhYKDmNvbHVtbnNfdG9fZ2V0GAMgAygJEkMKBmZpbHRlchgE",
            "IAEoCzIzLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29s",
            "dW1uQ29uZGl0aW9uIo4BCg5HZXRSb3dSZXNwb25zZRJGCghjb25zdW1lZBgB",
            "IAEoCzI0LldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29u",
            "c3VtZWRDYXBhY2l0eRI0CgNyb3cYAiABKAsyJy5XaWN0dXJlLkFsaXl1bi5U",
            "YWJsZVN0b3JlLlByb3RvY29sLlJvdyKdAQoMQ29sdW1uVXBkYXRlEj8KBHR5",
            "cGUYASABKA4yMS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29s",
            "Lk9wZXJhdGlvblR5cGUSDAoEbmFtZRgCIAEoCRI+CgV2YWx1ZRgDIAEoCzIv",
            "LldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uVmFs",
            "dWUi9gEKEFVwZGF0ZVJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRJA",
            "Cgljb25kaXRpb24YAiABKAsyLS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3Jl",
            "LlByb3RvY29sLkNvbmRpdGlvbhI/CgtwcmltYXJ5X2tleRgDIAMoCzIqLldp",
            "Y3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uEksKEWF0",
            "dHJpYnV0ZV9jb2x1bW5zGAQgAygLMjAuV2ljdHVyZS5BbGl5dW4uVGFibGVT",
            "dG9yZS5Qcm90b2NvbC5Db2x1bW5VcGRhdGUiWwoRVXBkYXRlUm93UmVzcG9u",
            "c2USRgoIY29uc3VtZWQYASABKAsyNC5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0",
            "b3JlLlByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHki7QEKDVB1dFJvd1JlcXVl",
            "c3QSEgoKdGFibGVfbmFtZRgBIAEoCRJACgljb25kaXRpb24YAiABKAsyLS5X",
            "aWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNvbmRpdGlvbhI/",
            "CgtwcmltYXJ5X2tleRgDIAMoCzIqLldpY3R1cmUuQWxpeXVuLlRhYmxlU3Rv",
            "cmUuUHJvdG9jb2wuQ29sdW1uEkUKEWF0dHJpYnV0ZV9jb2x1bW5zGAQgAygL",
            "MiouV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db2x1bW4i",
            "WAoOUHV0Um93UmVzcG9uc2USRgoIY29uc3VtZWQYASABKAsyNC5XaWN0dXJl",
            "LkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHki",
            "qQEKEERlbGV0ZVJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRJACglj",
            "b25kaXRpb24YAiABKAsyLS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlBy",
            "b3RvY29sLkNvbmRpdGlvbhI/CgtwcmltYXJ5X2tleRgDIAMoCzIqLldpY3R1",
            "cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uIlsKEURlbGV0",
            "ZVJvd1Jlc3BvbnNlEkYKCGNvbnN1bWVkGAEgASgLMjQuV2ljdHVyZS5BbGl5",
            "dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db25zdW1lZENhcGFjaXR5IloKF1Jv",
            "d0luQmF0Y2hHZXRSb3dSZXF1ZXN0Ej8KC3ByaW1hcnlfa2V5GAEgAygLMiou",
            "V2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db2x1bW4i1wEK",
            "GVRhYmxlSW5CYXRjaEdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEo",
            "CRJJCgRyb3dzGAIgAygLMjsuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Q",
            "cm90b2NvbC5Sb3dJbkJhdGNoR2V0Um93UmVxdWVzdBIWCg5jb2x1bW5zX3Rv",
            "X2dldBgDIAMoCRJDCgZmaWx0ZXIYBCABKAsyMy5XaWN0dXJlLkFsaXl1bi5U",
            "YWJsZVN0b3JlLlByb3RvY29sLkNvbHVtbkNvbmRpdGlvbiJjChJCYXRjaEdl",
            "dFJvd1JlcXVlc3QSTQoGdGFibGVzGAEgAygLMj0uV2ljdHVyZS5BbGl5dW4u",
            "VGFibGVTdG9yZS5Qcm90b2NvbC5UYWJsZUluQmF0Y2hHZXRSb3dSZXF1ZXN0",
            "IuEBChhSb3dJbkJhdGNoR2V0Um93UmVzcG9uc2USDQoFaXNfb2sYASABKAgS",
            "OAoFZXJyb3IYAiABKAsyKS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlBy",
            "b3RvY29sLkVycm9yEkYKCGNvbnN1bWVkGAMgASgLMjQuV2ljdHVyZS5BbGl5",
            "dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db25zdW1lZENhcGFjaXR5EjQKA3Jv",
            "dxgEIAEoCzInLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wu",
            "Um93InwKGlRhYmxlSW5CYXRjaEdldFJvd1Jlc3BvbnNlEhIKCnRhYmxlX25h",
            "bWUYASABKAkSSgoEcm93cxgCIAMoCzI8LldpY3R1cmUuQWxpeXVuLlRhYmxl",
            "U3RvcmUuUHJvdG9jb2wuUm93SW5CYXRjaEdldFJvd1Jlc3BvbnNlImUKE0Jh",
            "dGNoR2V0Um93UmVzcG9uc2USTgoGdGFibGVzGAEgAygLMj4uV2ljdHVyZS5B",
            "bGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5UYWJsZUluQmF0Y2hHZXRSb3dS",
            "ZXNwb25zZSLoAQocUHV0Um93SW5CYXRjaFdyaXRlUm93UmVxdWVzdBJACglj",
            "b25kaXRpb24YASABKAsyLS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlBy",
            "b3RvY29sLkNvbmRpdGlvbhI/CgtwcmltYXJ5X2tleRgCIAMoCzIqLldpY3R1",
            "cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uEkUKEWF0dHJp",
            "YnV0ZV9jb2x1bW5zGAMgAygLMiouV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9y",
            "ZS5Qcm90b2NvbC5Db2x1bW4i8QEKH1VwZGF0ZVJvd0luQmF0Y2hXcml0ZVJv",
            "d1JlcXVlc3QSQAoJY29uZGl0aW9uGAEgASgLMi0uV2ljdHVyZS5BbGl5dW4u",
            "VGFibGVTdG9yZS5Qcm90b2NvbC5Db25kaXRpb24SPwoLcHJpbWFyeV9rZXkY",
            "AiADKAsyKi5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNv",
            "bHVtbhJLChFhdHRyaWJ1dGVfY29sdW1ucxgDIAMoCzIwLldpY3R1cmUuQWxp",
            "eXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1uVXBkYXRlIqQBCh9EZWxl",
            "dGVSb3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0EkAKCWNvbmRpdGlvbhgBIAEo",
            "CzItLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29uZGl0",
            "aW9uEj8KC3ByaW1hcnlfa2V5GAIgAygLMiouV2ljdHVyZS5BbGl5dW4uVGFi",
            "bGVTdG9yZS5Qcm90b2NvbC5Db2x1bW4iuQIKG1RhYmxlSW5CYXRjaFdyaXRl",
            "Um93UmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgASgJElIKCHB1dF9yb3dzGAIg",
            "AygLMkAuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5QdXRS",
            "b3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0ElgKC3VwZGF0ZV9yb3dzGAMgAygL",
            "MkMuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5VcGRhdGVS",
            "b3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0ElgKC2RlbGV0ZV9yb3dzGAQgAygL",
            "MkMuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5EZWxldGVS",
            "b3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0ImcKFEJhdGNoV3JpdGVSb3dSZXF1",
            "ZXN0Ek8KBnRhYmxlcxgBIAMoCzI/LldpY3R1cmUuQWxpeXVuLlRhYmxlU3Rv",
            "cmUuUHJvdG9jb2wuVGFibGVJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0Iq0BChpS",
            "b3dJbkJhdGNoV3JpdGVSb3dSZXNwb25zZRINCgVpc19vaxgBIAEoCBI4CgVl",
            "cnJvchgCIAEoCzIpLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9j",
            "b2wuRXJyb3ISRgoIY29uc3VtZWQYAyABKAsyNC5XaWN0dXJlLkFsaXl1bi5U",
            "YWJsZVN0b3JlLlByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkirgIKHFRhYmxl",
            "SW5CYXRjaFdyaXRlUm93UmVzcG9uc2USEgoKdGFibGVfbmFtZRgBIAEoCRJQ",
            "CghwdXRfcm93cxgCIAMoCzI+LldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUu",
            "UHJvdG9jb2wuUm93SW5CYXRjaFdyaXRlUm93UmVzcG9uc2USUwoLdXBkYXRl",
            "X3Jvd3MYAyADKAsyPi5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3Rv",
            "Y29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlElMKC2RlbGV0ZV9yb3dz",
            "GAQgAygLMj4uV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5S",
            "b3dJbkJhdGNoV3JpdGVSb3dSZXNwb25zZSJpChVCYXRjaFdyaXRlUm93UmVz",
            "cG9uc2USUAoGdGFibGVzGAEgAygLMkAuV2ljdHVyZS5BbGl5dW4uVGFibGVT",
            "dG9yZS5Qcm90b2NvbC5UYWJsZUluQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlIvMC",
            "Cg9HZXRSYW5nZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRJACglkaXJl",
            "Y3Rpb24YAiABKA4yLS5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3Rv",
            "Y29sLkRpcmVjdGlvbhIWCg5jb2x1bW5zX3RvX2dldBgDIAMoCRINCgVsaW1p",
            "dBgEIAEoBRJPChtpbmNsdXNpdmVfc3RhcnRfcHJpbWFyeV9rZXkYBSADKAsy",
            "Ki5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNvbHVtbhJN",
            "ChlleGNsdXNpdmVfZW5kX3ByaW1hcnlfa2V5GAYgAygLMiouV2ljdHVyZS5B",
            "bGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db2x1bW4SQwoGZmlsdGVyGAcg",
            "ASgLMjMuV2ljdHVyZS5BbGl5dW4uVGFibGVTdG9yZS5Qcm90b2NvbC5Db2x1",
            "bW5Db25kaXRpb24i3QEKEEdldFJhbmdlUmVzcG9uc2USRgoIY29uc3VtZWQY",
            "ASABKAsyNC5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlByb3RvY29sLkNv",
            "bnN1bWVkQ2FwYWNpdHkSSgoWbmV4dF9zdGFydF9wcmltYXJ5X2tleRgCIAMo",
            "CzIqLldpY3R1cmUuQWxpeXVuLlRhYmxlU3RvcmUuUHJvdG9jb2wuQ29sdW1u",
            "EjUKBHJvd3MYAyADKAsyJy5XaWN0dXJlLkFsaXl1bi5UYWJsZVN0b3JlLlBy",
            "b3RvY29sLlJvdypkCgpDb2x1bW5UeXBlEgsKB0lORl9NSU4QABILCgdJTkZf",
            "TUFYEAESCwoHSU5URUdFUhACEgoKBlNUUklORxADEgsKB0JPT0xFQU4QBBIK",
            "CgZET1VCTEUQBRIKCgZCSU5BUlkQBipNChdSb3dFeGlzdGVuY2VFeHBlY3Rh",
            "dGlvbhIKCgZJR05PUkUQABIQCgxFWFBFQ1RfRVhJU1QQARIUChBFWFBFQ1Rf",
            "Tk9UX0VYSVNUEAIqSAoTQ29sdW1uQ29uZGl0aW9uVHlwZRIMCghDQ1RfTk9O",
            "RRAAEhAKDENDVF9SRUxBVElPThABEhEKDUNDVF9DT01QT1NJVEUQAiqNAQoO",
            "Q29tcGFyYXRvclR5cGUSCwoHQ1RfTk9ORRAAEgwKCENUX0VRVUFMEAESEAoM",
            "Q1RfTk9UX0VRVUFMEAISEwoPQ1RfR1JFQVRFUl9USEFOEAMSFAoQQ1RfR1JF",
            "QVRFUl9FUVVBTBAEEhAKDENUX0xFU1NfVEhBThAFEhEKDUNUX0xFU1NfRVFV",
            "QUwQBipBCg9Mb2dpY2FsT3BlcmF0b3ISCwoHTE9fTk9ORRAAEgoKBkxPX05P",
            "VBABEgoKBkxPX0FORBACEgkKBUxPX09SEAMqLgoNT3BlcmF0aW9uVHlwZRII",
            "CgROT05FEAASBwoDUFVUEAESCgoGREVMRVRFEAIqJgoJRGlyZWN0aW9uEgsK",
            "B0ZPUldBUkQQABIMCghCQUNLV0FSRBABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnType), typeof(global::Wicture.Aliyun.TableStore.Protocol.RowExistenceExpectation), typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnConditionType), typeof(global::Wicture.Aliyun.TableStore.Protocol.ComparatorType), typeof(global::Wicture.Aliyun.TableStore.Protocol.LogicalOperator), typeof(global::Wicture.Aliyun.TableStore.Protocol.OperationType), typeof(global::Wicture.Aliyun.TableStore.Protocol.Direction), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.Error), global::Wicture.Aliyun.TableStore.Protocol.Error.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema), global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema.Parser, new[]{ "Name", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnValue), global::Wicture.Aliyun.TableStore.Protocol.ColumnValue.Parser, new[]{ "Type", "VInt", "VString", "VBool", "VDouble", "VBinary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.Column), global::Wicture.Aliyun.TableStore.Protocol.Column.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.Row), global::Wicture.Aliyun.TableStore.Protocol.Row.Parser, new[]{ "PrimaryKeyColumns", "AttributeColumns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.TableMeta), global::Wicture.Aliyun.TableStore.Protocol.TableMeta.Parser, new[]{ "TableName", "PrimaryKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.RelationCondition), global::Wicture.Aliyun.TableStore.Protocol.RelationCondition.Parser, new[]{ "Comparator", "ColumnName", "ColumnValue", "PassIfMissing" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.CompositeCondition), global::Wicture.Aliyun.TableStore.Protocol.CompositeCondition.Parser, new[]{ "Combinator", "SubConditions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition), global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition.Parser, new[]{ "Type", "Condition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.Condition), global::Wicture.Aliyun.TableStore.Protocol.Condition.Parser, new[]{ "RowExistence", "ColumnCondition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit), global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit.Parser, new[]{ "Read", "Write" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails), global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails.Parser, new[]{ "CapacityUnit", "LastIncreaseTime", "LastDecreaseTime", "NumberOfDecreasesToday" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput), global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput.Parser, new[]{ "CapacityUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity), global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity.Parser, new[]{ "CapacityUnit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.CreateTableRequest), global::Wicture.Aliyun.TableStore.Protocol.CreateTableRequest.Parser, new[]{ "TableMeta", "ReservedThroughput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.CreateTableResponse), global::Wicture.Aliyun.TableStore.Protocol.CreateTableResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.UpdateTableRequest), global::Wicture.Aliyun.TableStore.Protocol.UpdateTableRequest.Parser, new[]{ "TableName", "ReservedThroughput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.UpdateTableResponse), global::Wicture.Aliyun.TableStore.Protocol.UpdateTableResponse.Parser, new[]{ "ReservedThroughputDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DescribeTableRequest), global::Wicture.Aliyun.TableStore.Protocol.DescribeTableRequest.Parser, new[]{ "TableName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DescribeTableResponse), global::Wicture.Aliyun.TableStore.Protocol.DescribeTableResponse.Parser, new[]{ "TableMeta", "ReservedThroughputDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ListTableRequest), global::Wicture.Aliyun.TableStore.Protocol.ListTableRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ListTableResponse), global::Wicture.Aliyun.TableStore.Protocol.ListTableResponse.Parser, new[]{ "TableNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DeleteTableRequest), global::Wicture.Aliyun.TableStore.Protocol.DeleteTableRequest.Parser, new[]{ "TableName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DeleteTableResponse), global::Wicture.Aliyun.TableStore.Protocol.DeleteTableResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.GetRowRequest), global::Wicture.Aliyun.TableStore.Protocol.GetRowRequest.Parser, new[]{ "TableName", "PrimaryKey", "ColumnsToGet", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.GetRowResponse), global::Wicture.Aliyun.TableStore.Protocol.GetRowResponse.Parser, new[]{ "Consumed", "Row" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate), global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate.Parser, new[]{ "Type", "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.UpdateRowRequest), global::Wicture.Aliyun.TableStore.Protocol.UpdateRowRequest.Parser, new[]{ "TableName", "Condition", "PrimaryKey", "AttributeColumns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.UpdateRowResponse), global::Wicture.Aliyun.TableStore.Protocol.UpdateRowResponse.Parser, new[]{ "Consumed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.PutRowRequest), global::Wicture.Aliyun.TableStore.Protocol.PutRowRequest.Parser, new[]{ "TableName", "Condition", "PrimaryKey", "AttributeColumns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.PutRowResponse), global::Wicture.Aliyun.TableStore.Protocol.PutRowResponse.Parser, new[]{ "Consumed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DeleteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.DeleteRowRequest.Parser, new[]{ "TableName", "Condition", "PrimaryKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DeleteRowResponse), global::Wicture.Aliyun.TableStore.Protocol.DeleteRowResponse.Parser, new[]{ "Consumed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest), global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest.Parser, new[]{ "PrimaryKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest), global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest.Parser, new[]{ "TableName", "Rows", "ColumnsToGet", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.BatchGetRowRequest), global::Wicture.Aliyun.TableStore.Protocol.BatchGetRowRequest.Parser, new[]{ "Tables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse), global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse.Parser, new[]{ "IsOk", "Error", "Consumed", "Row" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse), global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse.Parser, new[]{ "TableName", "Rows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.BatchGetRowResponse), global::Wicture.Aliyun.TableStore.Protocol.BatchGetRowResponse.Parser, new[]{ "Tables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest.Parser, new[]{ "Condition", "PrimaryKey", "AttributeColumns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest.Parser, new[]{ "Condition", "PrimaryKey", "AttributeColumns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest.Parser, new[]{ "Condition", "PrimaryKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest.Parser, new[]{ "TableName", "PutRows", "UpdateRows", "DeleteRows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.BatchWriteRowRequest), global::Wicture.Aliyun.TableStore.Protocol.BatchWriteRowRequest.Parser, new[]{ "Tables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse), global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse.Parser, new[]{ "IsOk", "Error", "Consumed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse), global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse.Parser, new[]{ "TableName", "PutRows", "UpdateRows", "DeleteRows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.BatchWriteRowResponse), global::Wicture.Aliyun.TableStore.Protocol.BatchWriteRowResponse.Parser, new[]{ "Tables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.GetRangeRequest), global::Wicture.Aliyun.TableStore.Protocol.GetRangeRequest.Parser, new[]{ "TableName", "Direction", "ColumnsToGet", "Limit", "InclusiveStartPrimaryKey", "ExclusiveEndPrimaryKey", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Wicture.Aliyun.TableStore.Protocol.GetRangeResponse), global::Wicture.Aliyun.TableStore.Protocol.GetRangeResponse.Parser, new[]{ "Consumed", "NextStartPrimaryKey", "Rows" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ColumnType {
    /// <summary>
    /// only for GetRange 
    /// </summary>
    [pbr::OriginalName("INF_MIN")] InfMin = 0,
    /// <summary>
    /// only for GetRange
    /// </summary>
    [pbr::OriginalName("INF_MAX")] InfMax = 1,
    [pbr::OriginalName("INTEGER")] Integer = 2,
    [pbr::OriginalName("STRING")] String = 3,
    [pbr::OriginalName("BOOLEAN")] Boolean = 4,
    [pbr::OriginalName("DOUBLE")] Double = 5,
    [pbr::OriginalName("BINARY")] Binary = 6,
  }

  public enum RowExistenceExpectation {
    [pbr::OriginalName("IGNORE")] Ignore = 0,
    [pbr::OriginalName("EXPECT_EXIST")] ExpectExist = 1,
    [pbr::OriginalName("EXPECT_NOT_EXIST")] ExpectNotExist = 2,
  }

  public enum ColumnConditionType {
    [pbr::OriginalName("CCT_NONE")] CctNone = 0,
    [pbr::OriginalName("CCT_RELATION")] CctRelation = 1,
    [pbr::OriginalName("CCT_COMPOSITE")] CctComposite = 2,
  }

  public enum ComparatorType {
    [pbr::OriginalName("CT_NONE")] CtNone = 0,
    [pbr::OriginalName("CT_EQUAL")] CtEqual = 1,
    [pbr::OriginalName("CT_NOT_EQUAL")] CtNotEqual = 2,
    [pbr::OriginalName("CT_GREATER_THAN")] CtGreaterThan = 3,
    [pbr::OriginalName("CT_GREATER_EQUAL")] CtGreaterEqual = 4,
    [pbr::OriginalName("CT_LESS_THAN")] CtLessThan = 5,
    [pbr::OriginalName("CT_LESS_EQUAL")] CtLessEqual = 6,
  }

  public enum LogicalOperator {
    [pbr::OriginalName("LO_NONE")] LoNone = 0,
    [pbr::OriginalName("LO_NOT")] LoNot = 1,
    [pbr::OriginalName("LO_AND")] LoAnd = 2,
    [pbr::OriginalName("LO_OR")] LoOr = 3,
  }

  /// <summary>
  /// UpdateRow 
  /// </summary>
  public enum OperationType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("PUT")] Put = 1,
    [pbr::OriginalName("DELETE")] Delete = 2,
  }

  /// <summary>
  /// GetRange 
  /// </summary>
  public enum Direction {
    [pbr::OriginalName("FORWARD")] Forward = 0,
    [pbr::OriginalName("BACKWARD")] Backward = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColumnSchema : pb::IMessage<ColumnSchema> {
    private static readonly pb::MessageParser<ColumnSchema> _parser = new pb::MessageParser<ColumnSchema>(() => new ColumnSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema(ColumnSchema other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnSchema Clone() {
      return new ColumnSchema(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnSchema other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            type_ = (global::Wicture.Aliyun.TableStore.Protocol.ColumnType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColumnValue : pb::IMessage<ColumnValue> {
    private static readonly pb::MessageParser<ColumnValue> _parser = new pb::MessageParser<ColumnValue>(() => new ColumnValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnValue(ColumnValue other) : this() {
      type_ = other.type_;
      vInt_ = other.vInt_;
      vString_ = other.vString_;
      vBool_ = other.vBool_;
      vDouble_ = other.vDouble_;
      vBinary_ = other.vBinary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnValue Clone() {
      return new ColumnValue(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "v_int" field.</summary>
    public const int VIntFieldNumber = 2;
    private long vInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VInt {
      get { return vInt_; }
      set {
        vInt_ = value;
      }
    }

    /// <summary>Field number for the "v_string" field.</summary>
    public const int VStringFieldNumber = 3;
    private string vString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VString {
      get { return vString_; }
      set {
        vString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "v_bool" field.</summary>
    public const int VBoolFieldNumber = 4;
    private bool vBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool VBool {
      get { return vBool_; }
      set {
        vBool_ = value;
      }
    }

    /// <summary>Field number for the "v_double" field.</summary>
    public const int VDoubleFieldNumber = 5;
    private double vDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VDouble {
      get { return vDouble_; }
      set {
        vDouble_ = value;
      }
    }

    /// <summary>Field number for the "v_binary" field.</summary>
    public const int VBinaryFieldNumber = 6;
    private pb::ByteString vBinary_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString VBinary {
      get { return vBinary_; }
      set {
        vBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (VInt != other.VInt) return false;
      if (VString != other.VString) return false;
      if (VBool != other.VBool) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VDouble, other.VDouble)) return false;
      if (VBinary != other.VBinary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (VInt != 0L) hash ^= VInt.GetHashCode();
      if (VString.Length != 0) hash ^= VString.GetHashCode();
      if (VBool != false) hash ^= VBool.GetHashCode();
      if (VDouble != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VDouble);
      if (VBinary.Length != 0) hash ^= VBinary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (VInt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VInt);
      }
      if (VString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VString);
      }
      if (VBool != false) {
        output.WriteRawTag(32);
        output.WriteBool(VBool);
      }
      if (VDouble != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(VDouble);
      }
      if (VBinary.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(VBinary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (VInt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VInt);
      }
      if (VString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VString);
      }
      if (VBool != false) {
        size += 1 + 1;
      }
      if (VDouble != 0D) {
        size += 1 + 8;
      }
      if (VBinary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(VBinary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnValue other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.VInt != 0L) {
        VInt = other.VInt;
      }
      if (other.VString.Length != 0) {
        VString = other.VString;
      }
      if (other.VBool != false) {
        VBool = other.VBool;
      }
      if (other.VDouble != 0D) {
        VDouble = other.VDouble;
      }
      if (other.VBinary.Length != 0) {
        VBinary = other.VBinary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Wicture.Aliyun.TableStore.Protocol.ColumnType) input.ReadEnum();
            break;
          }
          case 16: {
            VInt = input.ReadInt64();
            break;
          }
          case 26: {
            VString = input.ReadString();
            break;
          }
          case 32: {
            VBool = input.ReadBool();
            break;
          }
          case 41: {
            VDouble = input.ReadDouble();
            break;
          }
          case 50: {
            VBinary = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Column : pb::IMessage<Column> {
    private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Column> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column(Column other) : this() {
      name_ = other.name_;
      Value = other.value_ != null ? other.Value.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Column Clone() {
      return new Column(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnValue value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Column);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Column other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Column other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              value_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Row : pb::IMessage<Row> {
    private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Row> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row(Row other) : this() {
      primaryKeyColumns_ = other.primaryKeyColumns_.Clone();
      attributeColumns_ = other.attributeColumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row Clone() {
      return new Row(this);
    }

    /// <summary>Field number for the "primary_key_columns" field.</summary>
    public const int PrimaryKeyColumnsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKeyColumns_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKeyColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKeyColumns {
      get { return primaryKeyColumns_; }
    }

    /// <summary>Field number for the "attribute_columns" field.</summary>
    public const int AttributeColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_attributeColumns_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> attributeColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> AttributeColumns {
      get { return attributeColumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Row);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Row other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!primaryKeyColumns_.Equals(other.primaryKeyColumns_)) return false;
      if(!attributeColumns_.Equals(other.attributeColumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= primaryKeyColumns_.GetHashCode();
      hash ^= attributeColumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      primaryKeyColumns_.WriteTo(output, _repeated_primaryKeyColumns_codec);
      attributeColumns_.WriteTo(output, _repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += primaryKeyColumns_.CalculateSize(_repeated_primaryKeyColumns_codec);
      size += attributeColumns_.CalculateSize(_repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Row other) {
      if (other == null) {
        return;
      }
      primaryKeyColumns_.Add(other.primaryKeyColumns_);
      attributeColumns_.Add(other.attributeColumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            primaryKeyColumns_.AddEntriesFrom(input, _repeated_primaryKeyColumns_codec);
            break;
          }
          case 18: {
            attributeColumns_.AddEntriesFrom(input, _repeated_attributeColumns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableMeta : pb::IMessage<TableMeta> {
    private static readonly pb::MessageParser<TableMeta> _parser = new pb::MessageParser<TableMeta>(() => new TableMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta(TableMeta other) : this() {
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta Clone() {
      return new TableMeta(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnSchema> PrimaryKey {
      get { return primaryKey_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableMeta other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      primaryKey_.Add(other.primaryKey_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelationCondition : pb::IMessage<RelationCondition> {
    private static readonly pb::MessageParser<RelationCondition> _parser = new pb::MessageParser<RelationCondition>(() => new RelationCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationCondition(RelationCondition other) : this() {
      comparator_ = other.comparator_;
      columnName_ = other.columnName_;
      ColumnValue = other.columnValue_ != null ? other.ColumnValue.Clone() : null;
      passIfMissing_ = other.passIfMissing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationCondition Clone() {
      return new RelationCondition(this);
    }

    /// <summary>Field number for the "comparator" field.</summary>
    public const int ComparatorFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ComparatorType comparator_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ComparatorType Comparator {
      get { return comparator_; }
      set {
        comparator_ = value;
      }
    }

    /// <summary>Field number for the "column_name" field.</summary>
    public const int ColumnNameFieldNumber = 2;
    private string columnName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnName {
      get { return columnName_; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_value" field.</summary>
    public const int ColumnValueFieldNumber = 3;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnValue columnValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnValue ColumnValue {
      get { return columnValue_; }
      set {
        columnValue_ = value;
      }
    }

    /// <summary>Field number for the "pass_if_missing" field.</summary>
    public const int PassIfMissingFieldNumber = 4;
    private bool passIfMissing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PassIfMissing {
      get { return passIfMissing_; }
      set {
        passIfMissing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Comparator != other.Comparator) return false;
      if (ColumnName != other.ColumnName) return false;
      if (!object.Equals(ColumnValue, other.ColumnValue)) return false;
      if (PassIfMissing != other.PassIfMissing) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Comparator != 0) hash ^= Comparator.GetHashCode();
      if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
      if (columnValue_ != null) hash ^= ColumnValue.GetHashCode();
      if (PassIfMissing != false) hash ^= PassIfMissing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Comparator != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Comparator);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnName);
      }
      if (columnValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ColumnValue);
      }
      if (PassIfMissing != false) {
        output.WriteRawTag(32);
        output.WriteBool(PassIfMissing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Comparator != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Comparator);
      }
      if (ColumnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (columnValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColumnValue);
      }
      if (PassIfMissing != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationCondition other) {
      if (other == null) {
        return;
      }
      if (other.Comparator != 0) {
        Comparator = other.Comparator;
      }
      if (other.ColumnName.Length != 0) {
        ColumnName = other.ColumnName;
      }
      if (other.columnValue_ != null) {
        if (columnValue_ == null) {
          columnValue_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
        }
        ColumnValue.MergeFrom(other.ColumnValue);
      }
      if (other.PassIfMissing != false) {
        PassIfMissing = other.PassIfMissing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            comparator_ = (global::Wicture.Aliyun.TableStore.Protocol.ComparatorType) input.ReadEnum();
            break;
          }
          case 18: {
            ColumnName = input.ReadString();
            break;
          }
          case 26: {
            if (columnValue_ == null) {
              columnValue_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
            }
            input.ReadMessage(columnValue_);
            break;
          }
          case 32: {
            PassIfMissing = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompositeCondition : pb::IMessage<CompositeCondition> {
    private static readonly pb::MessageParser<CompositeCondition> _parser = new pb::MessageParser<CompositeCondition>(() => new CompositeCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompositeCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeCondition(CompositeCondition other) : this() {
      combinator_ = other.combinator_;
      subConditions_ = other.subConditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompositeCondition Clone() {
      return new CompositeCondition(this);
    }

    /// <summary>Field number for the "combinator" field.</summary>
    public const int CombinatorFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.LogicalOperator combinator_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.LogicalOperator Combinator {
      get { return combinator_; }
      set {
        combinator_ = value;
      }
    }

    /// <summary>Field number for the "sub_conditions" field.</summary>
    public const int SubConditionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition> _repeated_subConditions_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition> subConditions_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition> SubConditions {
      get { return subConditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompositeCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompositeCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Combinator != other.Combinator) return false;
      if(!subConditions_.Equals(other.subConditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Combinator != 0) hash ^= Combinator.GetHashCode();
      hash ^= subConditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Combinator != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Combinator);
      }
      subConditions_.WriteTo(output, _repeated_subConditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Combinator != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Combinator);
      }
      size += subConditions_.CalculateSize(_repeated_subConditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompositeCondition other) {
      if (other == null) {
        return;
      }
      if (other.Combinator != 0) {
        Combinator = other.Combinator;
      }
      subConditions_.Add(other.subConditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            combinator_ = (global::Wicture.Aliyun.TableStore.Protocol.LogicalOperator) input.ReadEnum();
            break;
          }
          case 18: {
            subConditions_.AddEntriesFrom(input, _repeated_subConditions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColumnCondition : pb::IMessage<ColumnCondition> {
    private static readonly pb::MessageParser<ColumnCondition> _parser = new pb::MessageParser<ColumnCondition>(() => new ColumnCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnCondition(ColumnCondition other) : this() {
      type_ = other.type_;
      condition_ = other.condition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnCondition Clone() {
      return new ColumnCondition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnConditionType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnConditionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private pb::ByteString condition_ = pb::ByteString.Empty;
    /// <summary>
    /// Serialized bytes of column condition of the type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Condition {
      get { return condition_; }
      set {
        condition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Condition != other.Condition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Condition.Length != 0) hash ^= Condition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Condition.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Condition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Condition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnCondition other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Condition.Length != 0) {
        Condition = other.Condition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Wicture.Aliyun.TableStore.Protocol.ColumnConditionType) input.ReadEnum();
            break;
          }
          case 18: {
            Condition = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Condition : pb::IMessage<Condition> {
    private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Condition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition(Condition other) : this() {
      rowExistence_ = other.rowExistence_;
      ColumnCondition = other.columnCondition_ != null ? other.ColumnCondition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition Clone() {
      return new Condition(this);
    }

    /// <summary>Field number for the "row_existence" field.</summary>
    public const int RowExistenceFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.RowExistenceExpectation rowExistence_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.RowExistenceExpectation RowExistence {
      get { return rowExistence_; }
      set {
        rowExistence_ = value;
      }
    }

    /// <summary>Field number for the "column_condition" field.</summary>
    public const int ColumnConditionFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition columnCondition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition ColumnCondition {
      get { return columnCondition_; }
      set {
        columnCondition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Condition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Condition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowExistence != other.RowExistence) return false;
      if (!object.Equals(ColumnCondition, other.ColumnCondition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RowExistence != 0) hash ^= RowExistence.GetHashCode();
      if (columnCondition_ != null) hash ^= ColumnCondition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RowExistence != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RowExistence);
      }
      if (columnCondition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ColumnCondition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RowExistence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RowExistence);
      }
      if (columnCondition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColumnCondition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Condition other) {
      if (other == null) {
        return;
      }
      if (other.RowExistence != 0) {
        RowExistence = other.RowExistence;
      }
      if (other.columnCondition_ != null) {
        if (columnCondition_ == null) {
          columnCondition_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
        }
        ColumnCondition.MergeFrom(other.ColumnCondition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            rowExistence_ = (global::Wicture.Aliyun.TableStore.Protocol.RowExistenceExpectation) input.ReadEnum();
            break;
          }
          case 18: {
            if (columnCondition_ == null) {
              columnCondition_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
            }
            input.ReadMessage(columnCondition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CapacityUnit : pb::IMessage<CapacityUnit> {
    private static readonly pb::MessageParser<CapacityUnit> _parser = new pb::MessageParser<CapacityUnit>(() => new CapacityUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CapacityUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit(CapacityUnit other) : this() {
      read_ = other.read_;
      write_ = other.write_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit Clone() {
      return new CapacityUnit(this);
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 1;
    private int read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Read {
      get { return read_; }
      set {
        read_ = value;
      }
    }

    /// <summary>Field number for the "write" field.</summary>
    public const int WriteFieldNumber = 2;
    private int write_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Write {
      get { return write_; }
      set {
        write_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CapacityUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CapacityUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Read != other.Read) return false;
      if (Write != other.Write) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Read != 0) hash ^= Read.GetHashCode();
      if (Write != 0) hash ^= Write.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Read != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Read);
      }
      if (Write != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Write);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Read != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Read);
      }
      if (Write != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Write);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CapacityUnit other) {
      if (other == null) {
        return;
      }
      if (other.Read != 0) {
        Read = other.Read;
      }
      if (other.Write != 0) {
        Write = other.Write;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Read = input.ReadInt32();
            break;
          }
          case 16: {
            Write = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservedThroughputDetails : pb::IMessage<ReservedThroughputDetails> {
    private static readonly pb::MessageParser<ReservedThroughputDetails> _parser = new pb::MessageParser<ReservedThroughputDetails>(() => new ReservedThroughputDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservedThroughputDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails(ReservedThroughputDetails other) : this() {
      CapacityUnit = other.capacityUnit_ != null ? other.CapacityUnit.Clone() : null;
      lastIncreaseTime_ = other.lastIncreaseTime_;
      lastDecreaseTime_ = other.lastDecreaseTime_;
      numberOfDecreasesToday_ = other.numberOfDecreasesToday_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails Clone() {
      return new ReservedThroughputDetails(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit capacityUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    /// <summary>Field number for the "last_increase_time" field.</summary>
    public const int LastIncreaseTimeFieldNumber = 2;
    private long lastIncreaseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastIncreaseTime {
      get { return lastIncreaseTime_; }
      set {
        lastIncreaseTime_ = value;
      }
    }

    /// <summary>Field number for the "last_decrease_time" field.</summary>
    public const int LastDecreaseTimeFieldNumber = 3;
    private long lastDecreaseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastDecreaseTime {
      get { return lastDecreaseTime_; }
      set {
        lastDecreaseTime_ = value;
      }
    }

    /// <summary>Field number for the "number_of_decreases_today" field.</summary>
    public const int NumberOfDecreasesTodayFieldNumber = 4;
    private int numberOfDecreasesToday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfDecreasesToday {
      get { return numberOfDecreasesToday_; }
      set {
        numberOfDecreasesToday_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservedThroughputDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservedThroughputDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      if (LastIncreaseTime != other.LastIncreaseTime) return false;
      if (LastDecreaseTime != other.LastDecreaseTime) return false;
      if (NumberOfDecreasesToday != other.NumberOfDecreasesToday) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (LastIncreaseTime != 0L) hash ^= LastIncreaseTime.GetHashCode();
      if (LastDecreaseTime != 0L) hash ^= LastDecreaseTime.GetHashCode();
      if (NumberOfDecreasesToday != 0) hash ^= NumberOfDecreasesToday.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (LastIncreaseTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastIncreaseTime);
      }
      if (LastDecreaseTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastDecreaseTime);
      }
      if (NumberOfDecreasesToday != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfDecreasesToday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (LastIncreaseTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastIncreaseTime);
      }
      if (LastDecreaseTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastDecreaseTime);
      }
      if (NumberOfDecreasesToday != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfDecreasesToday);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservedThroughputDetails other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      if (other.LastIncreaseTime != 0L) {
        LastIncreaseTime = other.LastIncreaseTime;
      }
      if (other.LastDecreaseTime != 0L) {
        LastDecreaseTime = other.LastDecreaseTime;
      }
      if (other.NumberOfDecreasesToday != 0) {
        NumberOfDecreasesToday = other.NumberOfDecreasesToday;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
            }
            input.ReadMessage(capacityUnit_);
            break;
          }
          case 16: {
            LastIncreaseTime = input.ReadInt64();
            break;
          }
          case 24: {
            LastDecreaseTime = input.ReadInt64();
            break;
          }
          case 32: {
            NumberOfDecreasesToday = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservedThroughput : pb::IMessage<ReservedThroughput> {
    private static readonly pb::MessageParser<ReservedThroughput> _parser = new pb::MessageParser<ReservedThroughput>(() => new ReservedThroughput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservedThroughput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput(ReservedThroughput other) : this() {
      CapacityUnit = other.capacityUnit_ != null ? other.CapacityUnit.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput Clone() {
      return new ReservedThroughput(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit capacityUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservedThroughput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservedThroughput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservedThroughput other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
            }
            input.ReadMessage(capacityUnit_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsumedCapacity : pb::IMessage<ConsumedCapacity> {
    private static readonly pb::MessageParser<ConsumedCapacity> _parser = new pb::MessageParser<ConsumedCapacity>(() => new ConsumedCapacity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsumedCapacity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity(ConsumedCapacity other) : this() {
      CapacityUnit = other.capacityUnit_ != null ? other.CapacityUnit.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity Clone() {
      return new ConsumedCapacity(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit capacityUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsumedCapacity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsumedCapacity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsumedCapacity other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              capacityUnit_ = new global::Wicture.Aliyun.TableStore.Protocol.CapacityUnit();
            }
            input.ReadMessage(capacityUnit_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CreateTable 
  /// </summary>
  public sealed partial class CreateTableRequest : pb::IMessage<CreateTableRequest> {
    private static readonly pb::MessageParser<CreateTableRequest> _parser = new pb::MessageParser<CreateTableRequest>(() => new CreateTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest(CreateTableRequest other) : this() {
      TableMeta = other.tableMeta_ != null ? other.TableMeta.Clone() : null;
      ReservedThroughput = other.reservedThroughput_ != null ? other.ReservedThroughput.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest Clone() {
      return new CreateTableRequest(this);
    }

    /// <summary>Field number for the "table_meta" field.</summary>
    public const int TableMetaFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.TableMeta tableMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.TableMeta TableMeta {
      get { return tableMeta_; }
      set {
        tableMeta_ = value;
      }
    }

    /// <summary>Field number for the "reserved_throughput" field.</summary>
    public const int ReservedThroughputFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput reservedThroughput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_; }
      set {
        reservedThroughput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableMeta, other.TableMeta)) return false;
      if (!object.Equals(ReservedThroughput, other.ReservedThroughput)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableMeta_ != null) hash ^= TableMeta.GetHashCode();
      if (reservedThroughput_ != null) hash ^= ReservedThroughput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tableMeta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableMeta);
      }
      if (reservedThroughput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableMeta);
      }
      if (reservedThroughput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughput);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.tableMeta_ != null) {
        if (tableMeta_ == null) {
          tableMeta_ = new global::Wicture.Aliyun.TableStore.Protocol.TableMeta();
        }
        TableMeta.MergeFrom(other.TableMeta);
      }
      if (other.reservedThroughput_ != null) {
        if (reservedThroughput_ == null) {
          reservedThroughput_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput();
        }
        ReservedThroughput.MergeFrom(other.ReservedThroughput);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableMeta_ == null) {
              tableMeta_ = new global::Wicture.Aliyun.TableStore.Protocol.TableMeta();
            }
            input.ReadMessage(tableMeta_);
            break;
          }
          case 18: {
            if (reservedThroughput_ == null) {
              reservedThroughput_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput();
            }
            input.ReadMessage(reservedThroughput_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTableResponse : pb::IMessage<CreateTableResponse> {
    private static readonly pb::MessageParser<CreateTableResponse> _parser = new pb::MessageParser<CreateTableResponse>(() => new CreateTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse(CreateTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse Clone() {
      return new CreateTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class UpdateTableRequest : pb::IMessage<UpdateTableRequest> {
    private static readonly pb::MessageParser<UpdateTableRequest> _parser = new pb::MessageParser<UpdateTableRequest>(() => new UpdateTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest(UpdateTableRequest other) : this() {
      tableName_ = other.tableName_;
      ReservedThroughput = other.reservedThroughput_ != null ? other.ReservedThroughput.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest Clone() {
      return new UpdateTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reserved_throughput" field.</summary>
    public const int ReservedThroughputFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput reservedThroughput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_; }
      set {
        reservedThroughput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(ReservedThroughput, other.ReservedThroughput)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (reservedThroughput_ != null) hash ^= ReservedThroughput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (reservedThroughput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (reservedThroughput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughput);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.reservedThroughput_ != null) {
        if (reservedThroughput_ == null) {
          reservedThroughput_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput();
        }
        ReservedThroughput.MergeFrom(other.ReservedThroughput);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (reservedThroughput_ == null) {
              reservedThroughput_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughput();
            }
            input.ReadMessage(reservedThroughput_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTableResponse : pb::IMessage<UpdateTableResponse> {
    private static readonly pb::MessageParser<UpdateTableResponse> _parser = new pb::MessageParser<UpdateTableResponse>(() => new UpdateTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse(UpdateTableResponse other) : this() {
      ReservedThroughputDetails = other.reservedThroughputDetails_ != null ? other.ReservedThroughputDetails.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse Clone() {
      return new UpdateTableResponse(this);
    }

    /// <summary>Field number for the "reserved_throughput_details" field.</summary>
    public const int ReservedThroughputDetailsFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails reservedThroughputDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_; }
      set {
        reservedThroughputDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReservedThroughputDetails, other.ReservedThroughputDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservedThroughputDetails_ != null) hash ^= ReservedThroughputDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservedThroughputDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReservedThroughputDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservedThroughputDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughputDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTableResponse other) {
      if (other == null) {
        return;
      }
      if (other.reservedThroughputDetails_ != null) {
        if (reservedThroughputDetails_ == null) {
          reservedThroughputDetails_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails();
        }
        ReservedThroughputDetails.MergeFrom(other.ReservedThroughputDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reservedThroughputDetails_ == null) {
              reservedThroughputDetails_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails();
            }
            input.ReadMessage(reservedThroughputDetails_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DescribeTable 
  /// </summary>
  public sealed partial class DescribeTableRequest : pb::IMessage<DescribeTableRequest> {
    private static readonly pb::MessageParser<DescribeTableRequest> _parser = new pb::MessageParser<DescribeTableRequest>(() => new DescribeTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest(DescribeTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest Clone() {
      return new DescribeTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DescribeTableResponse : pb::IMessage<DescribeTableResponse> {
    private static readonly pb::MessageParser<DescribeTableResponse> _parser = new pb::MessageParser<DescribeTableResponse>(() => new DescribeTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse(DescribeTableResponse other) : this() {
      TableMeta = other.tableMeta_ != null ? other.TableMeta.Clone() : null;
      ReservedThroughputDetails = other.reservedThroughputDetails_ != null ? other.ReservedThroughputDetails.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse Clone() {
      return new DescribeTableResponse(this);
    }

    /// <summary>Field number for the "table_meta" field.</summary>
    public const int TableMetaFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.TableMeta tableMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.TableMeta TableMeta {
      get { return tableMeta_; }
      set {
        tableMeta_ = value;
      }
    }

    /// <summary>Field number for the "reserved_throughput_details" field.</summary>
    public const int ReservedThroughputDetailsFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails reservedThroughputDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_; }
      set {
        reservedThroughputDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableMeta, other.TableMeta)) return false;
      if (!object.Equals(ReservedThroughputDetails, other.ReservedThroughputDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableMeta_ != null) hash ^= TableMeta.GetHashCode();
      if (reservedThroughputDetails_ != null) hash ^= ReservedThroughputDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tableMeta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableMeta);
      }
      if (reservedThroughputDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughputDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableMeta);
      }
      if (reservedThroughputDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughputDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTableResponse other) {
      if (other == null) {
        return;
      }
      if (other.tableMeta_ != null) {
        if (tableMeta_ == null) {
          tableMeta_ = new global::Wicture.Aliyun.TableStore.Protocol.TableMeta();
        }
        TableMeta.MergeFrom(other.TableMeta);
      }
      if (other.reservedThroughputDetails_ != null) {
        if (reservedThroughputDetails_ == null) {
          reservedThroughputDetails_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails();
        }
        ReservedThroughputDetails.MergeFrom(other.ReservedThroughputDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableMeta_ == null) {
              tableMeta_ = new global::Wicture.Aliyun.TableStore.Protocol.TableMeta();
            }
            input.ReadMessage(tableMeta_);
            break;
          }
          case 18: {
            if (reservedThroughputDetails_ == null) {
              reservedThroughputDetails_ = new global::Wicture.Aliyun.TableStore.Protocol.ReservedThroughputDetails();
            }
            input.ReadMessage(reservedThroughputDetails_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListTable 
  /// </summary>
  public sealed partial class ListTableRequest : pb::IMessage<ListTableRequest> {
    private static readonly pb::MessageParser<ListTableRequest> _parser = new pb::MessageParser<ListTableRequest>(() => new ListTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest(ListTableRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest Clone() {
      return new ListTableRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTableRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListTableResponse : pb::IMessage<ListTableResponse> {
    private static readonly pb::MessageParser<ListTableResponse> _parser = new pb::MessageParser<ListTableResponse>(() => new ListTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse(ListTableResponse other) : this() {
      tableNames_ = other.tableNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse Clone() {
      return new ListTableResponse(this);
    }

    /// <summary>Field number for the "table_names" field.</summary>
    public const int TableNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_tableNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> tableNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TableNames {
      get { return tableNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tableNames_.Equals(other.tableNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tableNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tableNames_.WriteTo(output, _repeated_tableNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tableNames_.CalculateSize(_repeated_tableNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTableResponse other) {
      if (other == null) {
        return;
      }
      tableNames_.Add(other.tableNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tableNames_.AddEntriesFrom(input, _repeated_tableNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteTable 
  /// </summary>
  public sealed partial class DeleteTableRequest : pb::IMessage<DeleteTableRequest> {
    private static readonly pb::MessageParser<DeleteTableRequest> _parser = new pb::MessageParser<DeleteTableRequest>(() => new DeleteTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest(DeleteTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest Clone() {
      return new DeleteTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTableResponse : pb::IMessage<DeleteTableResponse> {
    private static readonly pb::MessageParser<DeleteTableResponse> _parser = new pb::MessageParser<DeleteTableResponse>(() => new DeleteTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse(DeleteTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse Clone() {
      return new DeleteTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// GetRow 
  /// </summary>
  public sealed partial class GetRowRequest : pb::IMessage<GetRowRequest> {
    private static readonly pb::MessageParser<GetRowRequest> _parser = new pb::MessageParser<GetRowRequest>(() => new GetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest(GetRowRequest other) : this() {
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_.Clone();
      columnsToGet_ = other.columnsToGet_.Clone();
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest Clone() {
      return new GetRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      primaryKey_.Add(other.primaryKey_);
      columnsToGet_.Add(other.columnsToGet_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 34: {
            if (filter_ == null) {
              filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRowResponse : pb::IMessage<GetRowResponse> {
    private static readonly pb::MessageParser<GetRowResponse> _parser = new pb::MessageParser<GetRowResponse>(() => new GetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse(GetRowResponse other) : this() {
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      Row = other.row_ != null ? other.Row.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse Clone() {
      return new GetRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Row row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Row Row {
      get { return row_; }
      set {
        row_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (!object.Equals(Row, other.Row)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (row_ != null) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (row_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (row_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.row_ != null) {
        if (row_ == null) {
          row_ = new global::Wicture.Aliyun.TableStore.Protocol.Row();
        }
        Row.MergeFrom(other.Row);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
          case 18: {
            if (row_ == null) {
              row_ = new global::Wicture.Aliyun.TableStore.Protocol.Row();
            }
            input.ReadMessage(row_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ColumnUpdate : pb::IMessage<ColumnUpdate> {
    private static readonly pb::MessageParser<ColumnUpdate> _parser = new pb::MessageParser<ColumnUpdate>(() => new ColumnUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnUpdate(ColumnUpdate other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      Value = other.value_ != null ? other.Value.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnUpdate Clone() {
      return new ColumnUpdate(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.OperationType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.OperationType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnValue value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Wicture.Aliyun.TableStore.Protocol.OperationType) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (value_ == null) {
              value_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnValue();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRowRequest : pb::IMessage<UpdateRowRequest> {
    private static readonly pb::MessageParser<UpdateRowRequest> _parser = new pb::MessageParser<UpdateRowRequest>(() => new UpdateRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest(UpdateRowRequest other) : this() {
      tableName_ = other.tableName_;
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      attributeColumns_ = other.attributeColumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest Clone() {
      return new UpdateRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "attribute_columns" field.</summary>
    public const int AttributeColumnsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> _repeated_attributeColumns_codec
        = pb::FieldCodec.ForMessage(34, global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> attributeColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> AttributeColumns {
      get { return attributeColumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!attributeColumns_.Equals(other.attributeColumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= attributeColumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (condition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      attributeColumns_.WriteTo(output, _repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += attributeColumns_.CalculateSize(_repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      attributeColumns_.Add(other.attributeColumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 26: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 34: {
            attributeColumns_.AddEntriesFrom(input, _repeated_attributeColumns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRowResponse : pb::IMessage<UpdateRowResponse> {
    private static readonly pb::MessageParser<UpdateRowResponse> _parser = new pb::MessageParser<UpdateRowResponse>(() => new UpdateRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse(UpdateRowResponse other) : this() {
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse Clone() {
      return new UpdateRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PutRow 
  /// </summary>
  public sealed partial class PutRowRequest : pb::IMessage<PutRowRequest> {
    private static readonly pb::MessageParser<PutRowRequest> _parser = new pb::MessageParser<PutRowRequest>(() => new PutRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest(PutRowRequest other) : this() {
      tableName_ = other.tableName_;
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      attributeColumns_ = other.attributeColumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest Clone() {
      return new PutRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "attribute_columns" field.</summary>
    public const int AttributeColumnsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_attributeColumns_codec
        = pb::FieldCodec.ForMessage(34, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> attributeColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> AttributeColumns {
      get { return attributeColumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!attributeColumns_.Equals(other.attributeColumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= attributeColumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (condition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      attributeColumns_.WriteTo(output, _repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += attributeColumns_.CalculateSize(_repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      attributeColumns_.Add(other.attributeColumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 26: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 34: {
            attributeColumns_.AddEntriesFrom(input, _repeated_attributeColumns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutRowResponse : pb::IMessage<PutRowResponse> {
    private static readonly pb::MessageParser<PutRowResponse> _parser = new pb::MessageParser<PutRowResponse>(() => new PutRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse(PutRowResponse other) : this() {
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse Clone() {
      return new PutRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteRow 
  /// </summary>
  public sealed partial class DeleteRowRequest : pb::IMessage<DeleteRowRequest> {
    private static readonly pb::MessageParser<DeleteRowRequest> _parser = new pb::MessageParser<DeleteRowRequest>(() => new DeleteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest(DeleteRowRequest other) : this() {
      tableName_ = other.tableName_;
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest Clone() {
      return new DeleteRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (condition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 26: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRowResponse : pb::IMessage<DeleteRowResponse> {
    private static readonly pb::MessageParser<DeleteRowResponse> _parser = new pb::MessageParser<DeleteRowResponse>(() => new DeleteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse(DeleteRowResponse other) : this() {
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse Clone() {
      return new DeleteRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// BatchGetRow 
  /// </summary>
  public sealed partial class RowInBatchGetRowRequest : pb::IMessage<RowInBatchGetRowRequest> {
    private static readonly pb::MessageParser<RowInBatchGetRowRequest> _parser = new pb::MessageParser<RowInBatchGetRowRequest>(() => new RowInBatchGetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchGetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowRequest(RowInBatchGetRowRequest other) : this() {
      primaryKey_ = other.primaryKey_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowRequest Clone() {
      return new RowInBatchGetRowRequest(this);
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchGetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchGetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= primaryKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchGetRowRequest other) {
      if (other == null) {
        return;
      }
      primaryKey_.Add(other.primaryKey_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchGetRowRequest : pb::IMessage<TableInBatchGetRowRequest> {
    private static readonly pb::MessageParser<TableInBatchGetRowRequest> _parser = new pb::MessageParser<TableInBatchGetRowRequest>(() => new TableInBatchGetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchGetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest(TableInBatchGetRowRequest other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      columnsToGet_ = other.columnsToGet_.Clone();
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest Clone() {
      return new TableInBatchGetRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest> rows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowRequest> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchGetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchGetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchGetRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      columnsToGet_.Add(other.columnsToGet_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 26: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 34: {
            if (filter_ == null) {
              filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchGetRowRequest : pb::IMessage<BatchGetRowRequest> {
    private static readonly pb::MessageParser<BatchGetRowRequest> _parser = new pb::MessageParser<BatchGetRowRequest>(() => new BatchGetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest(BatchGetRowRequest other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest Clone() {
      return new BatchGetRowRequest(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest> tables_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowRequest> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetRowRequest other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RowInBatchGetRowResponse : pb::IMessage<RowInBatchGetRowResponse> {
    private static readonly pb::MessageParser<RowInBatchGetRowResponse> _parser = new pb::MessageParser<RowInBatchGetRowResponse>(() => new RowInBatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse(RowInBatchGetRowResponse other) : this() {
      isOk_ = other.isOk_;
      Error = other.error_ != null ? other.Error.Clone() : null;
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      Row = other.row_ != null ? other.Row.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse Clone() {
      return new RowInBatchGetRowResponse(this);
    }

    /// <summary>Field number for the "is_ok" field.</summary>
    public const int IsOkFieldNumber = 1;
    private bool isOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOk {
      get { return isOk_; }
      set {
        isOk_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 3;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 4;
    private global::Wicture.Aliyun.TableStore.Protocol.Row row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Row Row {
      get { return row_; }
      set {
        row_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOk != other.IsOk) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (!object.Equals(Row, other.Row)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOk != false) hash ^= IsOk.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (row_ != null) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsOk != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOk);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (consumed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Consumed);
      }
      if (row_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOk != false) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (row_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsOk != false) {
        IsOk = other.IsOk;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Wicture.Aliyun.TableStore.Protocol.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.row_ != null) {
        if (row_ == null) {
          row_ = new global::Wicture.Aliyun.TableStore.Protocol.Row();
        }
        Row.MergeFrom(other.Row);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOk = input.ReadBool();
            break;
          }
          case 18: {
            if (error_ == null) {
              error_ = new global::Wicture.Aliyun.TableStore.Protocol.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 26: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
          case 34: {
            if (row_ == null) {
              row_ = new global::Wicture.Aliyun.TableStore.Protocol.Row();
            }
            input.ReadMessage(row_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchGetRowResponse : pb::IMessage<TableInBatchGetRowResponse> {
    private static readonly pb::MessageParser<TableInBatchGetRowResponse> _parser = new pb::MessageParser<TableInBatchGetRowResponse>(() => new TableInBatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse(TableInBatchGetRowResponse other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse Clone() {
      return new TableInBatchGetRowResponse(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse> rows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchGetRowResponse> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchGetRowResponse : pb::IMessage<BatchGetRowResponse> {
    private static readonly pb::MessageParser<BatchGetRowResponse> _parser = new pb::MessageParser<BatchGetRowResponse>(() => new BatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse(BatchGetRowResponse other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse Clone() {
      return new BatchGetRowResponse(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse> tables_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchGetRowResponse> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// BatchWriteRow 
  /// </summary>
  public sealed partial class PutRowInBatchWriteRowRequest : pb::IMessage<PutRowInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<PutRowInBatchWriteRowRequest> _parser = new pb::MessageParser<PutRowInBatchWriteRowRequest>(() => new PutRowInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRowInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowInBatchWriteRowRequest(PutRowInBatchWriteRowRequest other) : this() {
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      attributeColumns_ = other.attributeColumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowInBatchWriteRowRequest Clone() {
      return new PutRowInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "attribute_columns" field.</summary>
    public const int AttributeColumnsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_attributeColumns_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> attributeColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> AttributeColumns {
      get { return attributeColumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRowInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRowInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!attributeColumns_.Equals(other.attributeColumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= attributeColumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (condition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      attributeColumns_.WriteTo(output, _repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += attributeColumns_.CalculateSize(_repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRowInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      attributeColumns_.Add(other.attributeColumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            attributeColumns_.AddEntriesFrom(input, _repeated_attributeColumns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRowInBatchWriteRowRequest : pb::IMessage<UpdateRowInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<UpdateRowInBatchWriteRowRequest> _parser = new pb::MessageParser<UpdateRowInBatchWriteRowRequest>(() => new UpdateRowInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRowInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowInBatchWriteRowRequest(UpdateRowInBatchWriteRowRequest other) : this() {
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      attributeColumns_ = other.attributeColumns_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowInBatchWriteRowRequest Clone() {
      return new UpdateRowInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "attribute_columns" field.</summary>
    public const int AttributeColumnsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> _repeated_attributeColumns_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> attributeColumns_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.ColumnUpdate> AttributeColumns {
      get { return attributeColumns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRowInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRowInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!attributeColumns_.Equals(other.attributeColumns_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= attributeColumns_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (condition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      attributeColumns_.WriteTo(output, _repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += attributeColumns_.CalculateSize(_repeated_attributeColumns_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRowInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      attributeColumns_.Add(other.attributeColumns_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            attributeColumns_.AddEntriesFrom(input, _repeated_attributeColumns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRowInBatchWriteRowRequest : pb::IMessage<DeleteRowInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<DeleteRowInBatchWriteRowRequest> _parser = new pb::MessageParser<DeleteRowInBatchWriteRowRequest>(() => new DeleteRowInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRowInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowInBatchWriteRowRequest(DeleteRowInBatchWriteRowRequest other) : this() {
      Condition = other.condition_ != null ? other.Condition.Clone() : null;
      primaryKey_ = other.primaryKey_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowInBatchWriteRowRequest Clone() {
      return new DeleteRowInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> primaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> PrimaryKey {
      get { return primaryKey_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRowInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRowInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (condition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Condition);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRowInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      primaryKey_.Add(other.primaryKey_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (condition_ == null) {
              condition_ = new global::Wicture.Aliyun.TableStore.Protocol.Condition();
            }
            input.ReadMessage(condition_);
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchWriteRowRequest : pb::IMessage<TableInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<TableInBatchWriteRowRequest> _parser = new pb::MessageParser<TableInBatchWriteRowRequest>(() => new TableInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest(TableInBatchWriteRowRequest other) : this() {
      tableName_ = other.tableName_;
      putRows_ = other.putRows_.Clone();
      updateRows_ = other.updateRows_.Clone();
      deleteRows_ = other.deleteRows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest Clone() {
      return new TableInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "put_rows" field.</summary>
    public const int PutRowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest> _repeated_putRows_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest> putRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.PutRowInBatchWriteRowRequest> PutRows {
      get { return putRows_; }
    }

    /// <summary>Field number for the "update_rows" field.</summary>
    public const int UpdateRowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest> _repeated_updateRows_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest> updateRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.UpdateRowInBatchWriteRowRequest> UpdateRows {
      get { return updateRows_; }
    }

    /// <summary>Field number for the "delete_rows" field.</summary>
    public const int DeleteRowsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest> _repeated_deleteRows_codec
        = pb::FieldCodec.ForMessage(34, global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest> deleteRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.DeleteRowInBatchWriteRowRequest> DeleteRows {
      get { return deleteRows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!putRows_.Equals(other.putRows_)) return false;
      if(!updateRows_.Equals(other.updateRows_)) return false;
      if(!deleteRows_.Equals(other.deleteRows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= putRows_.GetHashCode();
      hash ^= updateRows_.GetHashCode();
      hash ^= deleteRows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      putRows_.WriteTo(output, _repeated_putRows_codec);
      updateRows_.WriteTo(output, _repeated_updateRows_codec);
      deleteRows_.WriteTo(output, _repeated_deleteRows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += putRows_.CalculateSize(_repeated_putRows_codec);
      size += updateRows_.CalculateSize(_repeated_updateRows_codec);
      size += deleteRows_.CalculateSize(_repeated_deleteRows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      putRows_.Add(other.putRows_);
      updateRows_.Add(other.updateRows_);
      deleteRows_.Add(other.deleteRows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            putRows_.AddEntriesFrom(input, _repeated_putRows_codec);
            break;
          }
          case 26: {
            updateRows_.AddEntriesFrom(input, _repeated_updateRows_codec);
            break;
          }
          case 34: {
            deleteRows_.AddEntriesFrom(input, _repeated_deleteRows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchWriteRowRequest : pb::IMessage<BatchWriteRowRequest> {
    private static readonly pb::MessageParser<BatchWriteRowRequest> _parser = new pb::MessageParser<BatchWriteRowRequest>(() => new BatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest(BatchWriteRowRequest other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest Clone() {
      return new BatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest> tables_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowRequest> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RowInBatchWriteRowResponse : pb::IMessage<RowInBatchWriteRowResponse> {
    private static readonly pb::MessageParser<RowInBatchWriteRowResponse> _parser = new pb::MessageParser<RowInBatchWriteRowResponse>(() => new RowInBatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse(RowInBatchWriteRowResponse other) : this() {
      isOk_ = other.isOk_;
      Error = other.error_ != null ? other.Error.Clone() : null;
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse Clone() {
      return new RowInBatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "is_ok" field.</summary>
    public const int IsOkFieldNumber = 1;
    private bool isOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOk {
      get { return isOk_; }
      set {
        isOk_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 3;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOk != other.IsOk) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Consumed, other.Consumed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOk != false) hash ^= IsOk.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsOk != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOk);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (consumed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Consumed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOk != false) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsOk != false) {
        IsOk = other.IsOk;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::Wicture.Aliyun.TableStore.Protocol.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOk = input.ReadBool();
            break;
          }
          case 18: {
            if (error_ == null) {
              error_ = new global::Wicture.Aliyun.TableStore.Protocol.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 26: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchWriteRowResponse : pb::IMessage<TableInBatchWriteRowResponse> {
    private static readonly pb::MessageParser<TableInBatchWriteRowResponse> _parser = new pb::MessageParser<TableInBatchWriteRowResponse>(() => new TableInBatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse(TableInBatchWriteRowResponse other) : this() {
      tableName_ = other.tableName_;
      putRows_ = other.putRows_.Clone();
      updateRows_ = other.updateRows_.Clone();
      deleteRows_ = other.deleteRows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse Clone() {
      return new TableInBatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "put_rows" field.</summary>
    public const int PutRowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> _repeated_putRows_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> putRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> PutRows {
      get { return putRows_; }
    }

    /// <summary>Field number for the "update_rows" field.</summary>
    public const int UpdateRowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> _repeated_updateRows_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> updateRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> UpdateRows {
      get { return updateRows_; }
    }

    /// <summary>Field number for the "delete_rows" field.</summary>
    public const int DeleteRowsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> _repeated_deleteRows_codec
        = pb::FieldCodec.ForMessage(34, global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> deleteRows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse>();
    /// <summary>
    /// same indices w.r.t. request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.RowInBatchWriteRowResponse> DeleteRows {
      get { return deleteRows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!putRows_.Equals(other.putRows_)) return false;
      if(!updateRows_.Equals(other.updateRows_)) return false;
      if(!deleteRows_.Equals(other.deleteRows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= putRows_.GetHashCode();
      hash ^= updateRows_.GetHashCode();
      hash ^= deleteRows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      putRows_.WriteTo(output, _repeated_putRows_codec);
      updateRows_.WriteTo(output, _repeated_updateRows_codec);
      deleteRows_.WriteTo(output, _repeated_deleteRows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += putRows_.CalculateSize(_repeated_putRows_codec);
      size += updateRows_.CalculateSize(_repeated_updateRows_codec);
      size += deleteRows_.CalculateSize(_repeated_deleteRows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      putRows_.Add(other.putRows_);
      updateRows_.Add(other.updateRows_);
      deleteRows_.Add(other.deleteRows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            putRows_.AddEntriesFrom(input, _repeated_putRows_codec);
            break;
          }
          case 26: {
            updateRows_.AddEntriesFrom(input, _repeated_updateRows_codec);
            break;
          }
          case 34: {
            deleteRows_.AddEntriesFrom(input, _repeated_deleteRows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchWriteRowResponse : pb::IMessage<BatchWriteRowResponse> {
    private static readonly pb::MessageParser<BatchWriteRowResponse> _parser = new pb::MessageParser<BatchWriteRowResponse>(() => new BatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse(BatchWriteRowResponse other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse Clone() {
      return new BatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse> tables_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.TableInBatchWriteRowResponse> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeRequest : pb::IMessage<GetRangeRequest> {
    private static readonly pb::MessageParser<GetRangeRequest> _parser = new pb::MessageParser<GetRangeRequest>(() => new GetRangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest(GetRangeRequest other) : this() {
      tableName_ = other.tableName_;
      direction_ = other.direction_;
      columnsToGet_ = other.columnsToGet_.Clone();
      limit_ = other.limit_;
      inclusiveStartPrimaryKey_ = other.inclusiveStartPrimaryKey_.Clone();
      exclusiveEndPrimaryKey_ = other.exclusiveEndPrimaryKey_.Clone();
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest Clone() {
      return new GetRangeRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::Wicture.Aliyun.TableStore.Protocol.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "inclusive_start_primary_key" field.</summary>
    public const int InclusiveStartPrimaryKeyFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_inclusiveStartPrimaryKey_codec
        = pb::FieldCodec.ForMessage(42, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> inclusiveStartPrimaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    /// <summary>
    /// all PKs, possibly filled with INF_MIN/INF_MAX
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> InclusiveStartPrimaryKey {
      get { return inclusiveStartPrimaryKey_; }
    }

    /// <summary>Field number for the "exclusive_end_primary_key" field.</summary>
    public const int ExclusiveEndPrimaryKeyFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_exclusiveEndPrimaryKey_codec
        = pb::FieldCodec.ForMessage(50, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> exclusiveEndPrimaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    /// <summary>
    /// all PKs, possibly filled with INF_MIN/INF_MAX
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> ExclusiveEndPrimaryKey {
      get { return exclusiveEndPrimaryKey_; }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (Direction != other.Direction) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (Limit != other.Limit) return false;
      if(!inclusiveStartPrimaryKey_.Equals(other.inclusiveStartPrimaryKey_)) return false;
      if(!exclusiveEndPrimaryKey_.Equals(other.exclusiveEndPrimaryKey_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      hash ^= inclusiveStartPrimaryKey_.GetHashCode();
      hash ^= exclusiveEndPrimaryKey_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (Limit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Limit);
      }
      inclusiveStartPrimaryKey_.WriteTo(output, _repeated_inclusiveStartPrimaryKey_codec);
      exclusiveEndPrimaryKey_.WriteTo(output, _repeated_exclusiveEndPrimaryKey_codec);
      if (filter_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      size += inclusiveStartPrimaryKey_.CalculateSize(_repeated_inclusiveStartPrimaryKey_codec);
      size += exclusiveEndPrimaryKey_.CalculateSize(_repeated_exclusiveEndPrimaryKey_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      columnsToGet_.Add(other.columnsToGet_);
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      inclusiveStartPrimaryKey_.Add(other.inclusiveStartPrimaryKey_);
      exclusiveEndPrimaryKey_.Add(other.exclusiveEndPrimaryKey_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 16: {
            direction_ = (global::Wicture.Aliyun.TableStore.Protocol.Direction) input.ReadEnum();
            break;
          }
          case 26: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 32: {
            Limit = input.ReadInt32();
            break;
          }
          case 42: {
            inclusiveStartPrimaryKey_.AddEntriesFrom(input, _repeated_inclusiveStartPrimaryKey_codec);
            break;
          }
          case 50: {
            exclusiveEndPrimaryKey_.AddEntriesFrom(input, _repeated_exclusiveEndPrimaryKey_codec);
            break;
          }
          case 58: {
            if (filter_ == null) {
              filter_ = new global::Wicture.Aliyun.TableStore.Protocol.ColumnCondition();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeResponse : pb::IMessage<GetRangeResponse> {
    private static readonly pb::MessageParser<GetRangeResponse> _parser = new pb::MessageParser<GetRangeResponse>(() => new GetRangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Wicture.Aliyun.TableStore.Protocol.OtsProtocol3Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse(GetRangeResponse other) : this() {
      Consumed = other.consumed_ != null ? other.Consumed.Clone() : null;
      nextStartPrimaryKey_ = other.nextStartPrimaryKey_.Clone();
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse Clone() {
      return new GetRangeResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "next_start_primary_key" field.</summary>
    public const int NextStartPrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Column> _repeated_nextStartPrimaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Wicture.Aliyun.TableStore.Protocol.Column.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> nextStartPrimaryKey_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column>();
    /// <summary>
    /// missing means hitting the end
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Column> NextStartPrimaryKey {
      get { return nextStartPrimaryKey_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Wicture.Aliyun.TableStore.Protocol.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(26, global::Wicture.Aliyun.TableStore.Protocol.Row.Parser);
    private readonly pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Row> rows_ = new pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Row>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Wicture.Aliyun.TableStore.Protocol.Row> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if(!nextStartPrimaryKey_.Equals(other.nextStartPrimaryKey_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      hash ^= nextStartPrimaryKey_.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      nextStartPrimaryKey_.WriteTo(output, _repeated_nextStartPrimaryKey_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      size += nextStartPrimaryKey_.CalculateSize(_repeated_nextStartPrimaryKey_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      nextStartPrimaryKey_.Add(other.nextStartPrimaryKey_);
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              consumed_ = new global::Wicture.Aliyun.TableStore.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(consumed_);
            break;
          }
          case 18: {
            nextStartPrimaryKey_.AddEntriesFrom(input, _repeated_nextStartPrimaryKey_codec);
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
